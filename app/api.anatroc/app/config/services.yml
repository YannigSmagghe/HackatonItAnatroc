# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    api:
        classes:
            - AppBundle\Api\Transport\GoogleDirection
            - AppBundle\Service\Velov\Velov
            - AppBundle\Api\Weather\WeatherInfoClimat
        google_direction:
            url: "https://maps.googleapis.com/maps/api/directions/"
            key: "%google_api_key.direction%"
services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests,Model}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Service\Velov\Velov:
        public: true

    AppBundle\Api\Transport\GoogleDirection:
      public: true
      arguments:
        - "%api%"

    AppBundle\Resolver\ApiServiceResolver:
      public: true
      arguments:
        - "@service_container"
        - "%api%"

    AppBundle\Api\Weather\WeatherInfoClimat:
      public: true
